{"version":3,"sources":["Context.js","WeatherMain.js","App.js","index.js"],"names":["Context","createContext","ContextProvider","props","useState","query","setQuery","weather","setWeather","useEffect","navigator","geolocation","getCurrentPosition","position","latitude","coords","longitude","fetch","then","response","json","data","className","location","name","country","src","current","condition","icon","alt","text","Math","round","temp_c","forecast","forecastday","map","item","index","day","date","maxtemp_c","mintemp_c","Provider","value","handleChange","e","target","handleSubmit","preventDefault","children","WeatherMain","useContext","onSubmit","type","placeholder","onChange","App","ReactDOM","render","document","getElementById"],"mappings":"sLACMA,EAAUC,0BAEhB,SAASC,EAAgBC,GACrB,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAiEA,OA3DAC,qBAAU,WACRC,UAAUC,YAAYC,oBAAmB,SAACC,GACxC,IAAMC,EAAWD,EAASE,OAAOD,SAC3BE,EAAYH,EAASE,OAAOC,UAEpCC,MAAM,oFAAD,OAAqFH,EAArF,YAAiGE,EAAjG,6BACJE,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBF,MAAK,SAAAG,GAAI,OAAEb,EAEV,sBAAKc,UAAU,mBAAf,UAEA,sBAAKA,UAAU,qBAAf,UACA,8BAAID,EAAKE,SAASC,KAAlB,KAA0BH,EAAKE,SAASE,QAAxC,OACA,qBAAKC,IAAKL,EAAKM,QAAQC,UAAUC,KAAMC,IAAKT,EAAKM,QAAQC,UAAUG,OACnE,8BAAIV,EAAKM,QAAQC,UAAUG,KAA3B,KAAmCC,KAAKC,MAAMZ,EAAKM,QAAQO,QAA3D,cAGA,qBAAKZ,UAAU,sBAAf,SACCD,EAAKc,SAASC,YAAYC,KAAI,SAACC,EAAKC,GAAN,OAC/B,sBAAKjB,UAAU,cAAf,UACA,qBAAKI,IAAKY,EAAKE,IAAIZ,UAAUC,KAAMC,IAAKQ,EAAKE,IAAIZ,UAAUG,OAC3D,mBAAGT,UAAU,eAAb,SAA6BgB,EAAKG,OAClC,oBAAGnB,UAAU,YAAb,gBAA6BU,KAAKC,MAAMK,EAAKE,IAAIE,WAAjD,WACA,oBAAGpB,UAAU,YAAb,gBAA6BU,KAAKC,MAAMK,EAAKE,IAAIG,WAAjD,aAJkCJ,oBAUlC,IA+BA,cAACvC,EAAQ4C,SAAT,CAAkBC,MAAO,CAACxC,QAAOE,UAASuC,aAhE9C,SAAsBC,GAClBzC,EAASyC,EAAEC,OAAOH,QA+DsCI,aA7B5D,SAAsBF,GACpBA,EAAEG,iBACS,KAAR7C,GACHY,MAAM,oFAAD,OAAsFZ,EAAtF,6BACJa,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBF,MAAK,SAAAG,GAAI,OAAEb,EACV,sBAAKc,UAAU,mBAAf,UAEA,sBAAKA,UAAU,qBAAf,UACA,8BAAID,EAAKE,SAASC,KAAlB,KAA0BH,EAAKE,SAASE,QAAxC,OACA,qBAAKC,IAAKL,EAAKM,QAAQC,UAAUC,KAAMC,IAAKT,EAAKM,QAAQC,UAAUG,OACnE,8BAAIV,EAAKM,QAAQC,UAAUG,KAA3B,KAAmCC,KAAKC,MAAMZ,EAAKM,QAAQO,QAA3D,cAGA,qBAAKZ,UAAU,sBAAf,SACCD,EAAKc,SAASC,YAAYC,KAAI,SAACC,EAAKC,GAAN,OAC/B,sBAAKjB,UAAU,cAAf,UACA,qBAAKI,IAAKY,EAAKE,IAAIZ,UAAUC,KAAMC,IAAKQ,EAAKE,IAAIZ,UAAUG,OAC3D,mBAAGT,UAAU,eAAb,SAA6BgB,EAAKG,OAClC,oBAAGnB,UAAU,YAAb,gBAA6BU,KAAKC,MAAMK,EAAKE,IAAIE,WAAjD,WACA,oBAAGpB,UAAU,YAAb,gBAA6BU,KAAKC,MAAMK,EAAKE,IAAIG,WAAjD,aAJkCJ,iBAalC,SACKpC,EAAMgD,WClDJC,MAnBf,WACI,MAAqDC,qBAAWrD,GAAzDK,EAAP,EAAOA,MAAOyC,EAAd,EAAcA,aAAcG,EAA5B,EAA4BA,aAAc1C,EAA1C,EAA0CA,QAE1C,OACI,sBAAKe,UAAU,YAAf,UACA,uBAAMgC,SAAUL,EAAhB,UACI,uBAAOJ,MAAOxC,EACdkD,KAAK,OACLC,YAAY,cACZC,SAAUX,IAEV,+CAECvC,M,MCPEmD,MANf,WAEE,OACI,cAAC,EAAD,KCANC,IAASC,OACP,cAAC1D,EAAD,UACE,cAAC,EAAD,MAEF2D,SAASC,eAAe,W","file":"static/js/main.4cdb23c5.chunk.js","sourcesContent":["import React, {useState, useEffect, createContext} from 'react'\r\nconst Context = createContext();\r\n\r\nfunction ContextProvider(props){\r\n    const [query, setQuery] = useState('')\r\n    const [weather, setWeather] = useState([])\r\n\r\n    function handleChange(e){\r\n        setQuery(e.target.value)\r\n    }\r\n  \r\n    useEffect(()=>{\r\n      navigator.geolocation.getCurrentPosition((position)=>{\r\n        const latitude = position.coords.latitude\r\n        const longitude = position.coords.longitude\r\n      \r\n      fetch(`https://api.weatherapi.com/v1/forecast.json?key=56411f6296174712af881712212508&q=${latitude},${longitude}&days=3&aqi=no&alerts=no`)\r\n      .then(response=>response.json())\r\n      .then(data=>setWeather(\r\n  \r\n        <div className='weatherContainer'>\r\n  \r\n        <div className='currentWeatherInfo'>\r\n        <p>{data.location.name}, {data.location.country} </p>\r\n        <img src={data.current.condition.icon} alt={data.current.condition.text}/>\r\n        <p>{data.current.condition.text}, {Math.round(data.current.temp_c)}°C</p>\r\n        </div>\r\n  \r\n        <div className='nextWetherContainer'>\r\n        {data.forecast.forecastday.map((item,index)=>(\r\n        <div className=\"nextWeather\" key={index}>\r\n        <img src={item.day.condition.icon} alt={item.day.condition.text}/>\r\n        <p className=\"itemDateNext\">{item.date}</p>  \r\n        <p className=\"itemInfoC\">M: {Math.round(item.day.maxtemp_c)}°C</p>\r\n        <p className=\"itemInfoC\">L: {Math.round(item.day.mintemp_c)}°C</p>\r\n        </div>\r\n        ))}\r\n        </div>\r\n        </div>\r\n      ))\r\n    })},[]) \r\n  \r\n    function handleSubmit(e){\r\n      e.preventDefault();\r\n      if(query!==\"\"){\r\n      fetch((`https://api.weatherapi.com/v1/forecast.json?key=56411f6296174712af881712212508&q=${query}&days=3&aqi=no&alerts=no`))\r\n      .then(response=>response.json())\r\n      .then(data=>setWeather(\r\n        <div className='weatherContainer'>\r\n  \r\n        <div className='currentWeatherInfo'>\r\n        <p>{data.location.name}, {data.location.country} </p>\r\n        <img src={data.current.condition.icon} alt={data.current.condition.text}/>\r\n        <p>{data.current.condition.text}, {Math.round(data.current.temp_c)}°C</p>\r\n        </div>\r\n  \r\n        <div className='nextWetherContainer'>\r\n        {data.forecast.forecastday.map((item,index)=>(\r\n        <div className=\"nextWeather\" key={index}>\r\n        <img src={item.day.condition.icon} alt={item.day.condition.text}/>\r\n        <p className=\"itemDateNext\">{item.date}</p>  \r\n        <p className=\"itemInfoC\">M: {Math.round(item.day.maxtemp_c)}°C</p>\r\n        <p className=\"itemInfoC\">L: {Math.round(item.day.mintemp_c)}°C</p>\r\n        </div>\r\n        ))}\r\n        </div>\r\n        </div>))\r\n        }\r\n    }\r\n  \r\n    return(\r\n        <Context.Provider value={{query, weather, handleChange, handleSubmit}}>\r\n            {props.children}\r\n        </Context.Provider>\r\n    )\r\n}\r\n\r\nexport {ContextProvider, Context}","import React, {useContext} from 'react'\r\nimport {Context} from './Context'\r\n\r\nfunction WeatherMain(){\r\n    const {query, handleChange, handleSubmit, weather} = useContext(Context)\r\n\r\n    return(\r\n        <div className='container'>\r\n        <form onSubmit={handleSubmit}>\r\n            <input value={query}\r\n            type=\"text\" \r\n            placeholder=\"e.g. London\"\r\n            onChange={handleChange}\r\n            />\r\n            <button>Search</button>\r\n        </form>\r\n            {weather}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default WeatherMain","import React from 'react'\nimport WeatherMain from './WeatherMain'\nimport './index.css'\nfunction App(){\n \n  return(\n      <WeatherMain/>\n  )\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\nimport {ContextProvider} from './Context'\n\n\nReactDOM.render(\n  <ContextProvider>\n    <App />\n  </ContextProvider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}